package com.dnd.gooding.mock;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.dnd.gooding.domain.user.model.User;
import com.dnd.gooding.domain.user.service.port.UserRepository;

public class FakeUserRepository implements UserRepository {

	private final AtomicLong autoGeneratedId = new AtomicLong(0);
	private final List<User> data = Collections.synchronizedList(new ArrayList<>());

	@Override
	public Optional<User> findByUserIdByProviderAndOauthId(String provider, String oauthId) {
		return Optional.empty();
	}

	@Override
	public Optional<User> findByOauthId(String oauthId) {
		return Optional.empty();
	}

	@Override
	public Optional<User> findByUserIdAndOnboarding(Long userId) {
		return Optional.empty();
	}

	@Override
	public void profileImageUpdate(User updateUser, String profileImageUrl) {

	}

	@Override
	public void nickNameUpdate(User updateUser, String nickName) {

	}
}
