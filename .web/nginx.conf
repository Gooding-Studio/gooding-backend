## NGINX 프로세스가 실행되는 권한, root 권한은 보안상 위험.
user                nginx;
## 로그레벨 [ debug | info | notice | warn | error | crit ]
## nginx의 에러로그가 쌓이는 경로.
error_log           /var/log/nginx/error.log warn;
## nginx의 프로세스 아이디 (pid)가 저장되는 경로.
pid                 /var/run/nginx.pid;
## Default: 1, CPU 코어 하나에 최소한 한 개의 프로세스가 배정되도록 변경 권장.
worker_processes    auto;

events {
    ## Default: 1024, 현 서버는 RAM 8GB라 상향조정.
    worker_connections 1024;
    use epoll;
}

## http 블록은 nginx로 들어오는 웹 트래픽에 대한 처리 방법과 방향을 설정해주는 블록.
http {
    ## 포함시킬 외부파일을 정의. mime.types란 파일에 작성되어진 내용들을 현재 파일로 가져오는 것을 의미.
    include /etc/nginx/mime.types;
    ## 웹서버의 기본 Content-Type을 정의.
    default_type application/octet-stream;

    ## 로그 형식을 지정. 후술한 로그 형태에 따라 로그가 작성되고 기록.
    log_format main '$remote_addr - $remote_user [$time_local] "$request"'
                    '$status $body_bytes_sent "$http_referer"'
                    '"$http_user_agent" "$http_x_forwarded_for"';

    include conf.d/*.conf;

    ## upstream HOST명 형식으로 사용.
    upstream springboot {
        server 127.0.0.1:8080;
        keepalive 1024;
    }

    ## 서버 상에서 2개 이상의 웹 사이트를 실행할 수 있는 방법.
    server {
        ## listen은 Nginx가 요청을 받아들일 포트를 설정. default값은 80.
        listen 80;
        ## https를 적용하려면 listen 443 ssl; 을 입력.
        ## listen  443 ssl;

        ## HTTPS 서버 블록 내에서 사용할 경우 프록시 서버의 각 HTTP 응답이 HTTPS로 다시 작성.
        ## proxy_set_header X-Forwarded-Proto $scheme;
        ## 특정 경로에 대하여 적절한 WAS로 요청을 넘겨줄 수 있게 해주는 블록.
        location / {
            proxy_pass          http://springboot;
            ## 리버스 프록시를 위한 HTTP 프로토콜 버전을 정의. 기본 값은 1.0
            ## 웹 소켓 및 활성 연결을 유지하려면 버전 1.1을 사용해야 함.
            proxy_http_version  1.1;
            ## Upgrade $http_upgrade 및 Connection "upgrade" :
            ## 응용프로그램이 웹 소켓을 사용하는 경우 Upgrade와 Connection 헤더가 필요
            proxy_set_header    Connection          $connection_upgrade;
            proxy_set_header    Upgrade             $http_upgrade;
            ## $host 변수에는 요청을 보낸 호스트 이름 또는 호스트 요청 헤더 필드의 호스트 이름
            ## 또는 요청과 일치하는 서버 이름이 포함.
            proxy_set_header    Host                $host;
            ## 실제 방문자 원격 IP 주소를 리버스 프록시 서버로 전달.
            proxy_set_header    X-Real-IP           $remote_addr;
            ## 클라이언트가 프록시 처리한 모든 서버의 IP 주소를 포함하는 목록.
            ## X-Forwarded-For 헤더값은 조작이 가능하기 때문에 애플리케이션에서
            ## Client IP 값으로 어떠한 작업이 필요할 경우 올바르게 동작하지 않을 수 있다.
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        ## 접속 로그가 쌓이는 경로.
        access_log /var/log/nginx/access.log main;

        ## request header 정보를 읽는데 설정된 timeout 시간.
        ## 지정한 시간안에 client가 헤더를 전송하지 않으면 요청은 408(Request Time-out)로 끝남. 디폴트 값은 60초
        client_header_timeout   60;
        ## request body 정보를 읽는데 설정된 timeout 시간.
        ## request body 전체 전송 timeout 시간이 아니라, 두개의 연속적인 읽기 작업 사이의 timeout 시간.
        ## 지정한 시간안에 client가 아무것도 전송하지 않으면 요청은 408(Request Time-out)로 끝남. 디폴트 값은 60초
        client_body_timeout     60;
        ## 클라이언트에서 연결이 유지될 시간을 정의. 기본은 65로 설정.
        keepalive_timeout       60;
        ## GNU zip 의 줄임말이며 리눅스/유닉스 시스템에서 널리쓰이는 압축 소프트웨어.
        ## 웹서버 통신을 할 떄 데이터를 gzip 압축하여 전송하면 속도가 더 빨라진다.
        gzip                    off;
    }
}
